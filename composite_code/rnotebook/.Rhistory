set.seed(newseed)
}
cv.fit <- cv.glmnet(x[train.names,], y[train.names], family = "binomial",
type.logistic="modified.Newton", standardize = standardize,
lambda = grid, alpha=1, nfolds = length(train.names), #LOOCV
type.measure = "class", intercept = FALSE)
#Select lambda min.
lambda.min <- cv.fit$lambda.min
#predict the classes
pred.class <- predict(fit, newx = x[test.names,], type="class", s=lambda.min)
#find the test error
tab <- table(pred.class,y[test.names])
testError <- mean(pred.class != y[test.names]) #how many predicted classes were incorrect
#Fit the full dataset.
final <- glmnet(x, y,family = "binomial", standardize = standardize,
lambda = grid, alpha = 1, intercept = FALSE)
#Extract the coefficients
coef <- predict(final, type="coefficients", s=lambda.min)
idx <- which(!as.numeric(coef)==0)
nonZero <- coef[idx,]
#Results
lassosubset.list <- list(train.names, test.names, contrast, fit,
cv.fit, tab, testError, final, nonZero, newseed)
names(lassosubset.list) <- c("training.set", "testing.set","contrast", "train.fit",
"cv.fit", "confusionMatrix","test.error", "final.model",
"nonzero.coef", "seednum")
lassosubset.list$nonzero.coef
lassosubset.list$confusionMatrix
coefgenes_dfsym = names(lassosubset.list$nonzero.coef)
ncoefgenes_dfsym = rownames(seset[!rownames(seset) %in% coefgenes_dfsym,])
cgl = lassosubset.list$nonzero.coef
coeffvect = c(as.numeric(cgl),
rep(0, nrow(seset[!rownames(seset) %in% names(cgl)]))
)
names(coeffvect) <- c(names(cgl), rownames(seset[!rownames(seset) %in% names(cgl)]))
coeffvect = coeffvect[order(match(names(coeffvect), rownames(standtable)))]
identical(names(coeffvect), rownames(standtable))
coeffvect
standtable$lasso_rmCoeff <- coeffvect
stdtable.name <- "standardtable_mloutputs_summary.rda"
save(standtable, file = paste0(data.dir, sys.sep, stdtable.name))
smlasso.list$confusionMatrix
standtable[!standtable$lasso_coeff==0 | !standtable$lasso_rmCoeff==0,]
library(reshape2)
library(ggplot2)
# Get lower triangle of the correlation matrix
get_lower_tri<-function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
goi <- rownames(standtable[!standtable$lasso_coeff==0 | !standtable$lasso_rmCoeff==0,])
# Corr data, full dataset
cormat <- round(cor(t(assay(degfilt.se[goi,])), method="spearman"),3)
melted_cormat <- melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
hist(melted_cormat$value)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Corr\nLasso and Lasso_CoeffFilt Genes")
cormat <- round(cor(t(assay(degfilt.se[goi,])), method="spearman"),3)
melted_cormat <- melt(cormat)
colnames(melted_cormat) <- c("Gene Feature 1","Gene Feature 2","Rho")
hist(melted_cormat$value)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)")
ggplot(data = melted_cormat, aes(x="Gene Feature 1", y="Gene Feature 2", fill="Rho")) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)")
head(melted_cormat)
ggplot(data = melted_cormat, aes(x=melted_cormat$`Gene Feature 1`, y=melted_cormat$`Gene Feature 2`, fill=melted_cormat$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)")
ggplot(data = melted_cormat, aes(x=melted_cormat$`Gene Feature 1`, y=melted_cormat$`Gene Feature 2`, fill=melted_cormat$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fille="Rho")
ggplot(data = melted_cormat, aes(x=melted_cormat$`Gene Feature 1`, y=melted_cormat$`Gene Feature 2`, fill=melted_cormat$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
corhist = hist(density(melted_cormat$value))
cormat <- round(cor(t(assay(degfilt.se)), method="spearman"),3)
melted_cormat <- melt(cormat)
corhist = hist(density(melted_cormat$value))
plot(density(melted_cormat$value))
cormat_filt <- round(cor(t(assay(degfilt.se[goi,])), method="spearman"),3)
melted_cormat_filt <- melt(cormat_filt)
lines(density(melted_cormat_filt$value))
lines(density(melted_cormat_filt$value), col="green", lty=2)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2))
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2)
lines(density(melted_cormat_filt$value))
lines(density(melted_cormat_filt$value), col="green", lty=2)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2)
lines(density(melted_cormat_filt$value))
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2), lty=2)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2)
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2), lty=2)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2)
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=2)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lwd=2)
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1,1))
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2))
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes (2 reps, with and without coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1))
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes (2 reps, with and without coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.1)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes (2 reps, with and without coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes\n(2 reps, with and\nwithout coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes\n(2 reps, with and\nwithout coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
corhist.name <- "corplot_hist_all-vs-lassogenes.jpg"
jpeg(paste0(figs.dir, sys.sep, corhist.name), 4,3,units="in",res=400)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes\n(2 reps, with and\nwithout coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
dev.off()
colnames(melted_cormat_gene) <- c("Gene Feature 1","Gene Feature 2","Rho")
corhm = ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
corhm
colnames(melted_cormat_gene) <- c("Gene Feature 1","Gene Feature 2","Rho")
corhm = ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
colnames(melted_cormat_filt) <- c("Gene Feature 1","Gene Feature 2","Rho")
corhm = ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features (First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
corhm
corhm.name = "corplot_hm_lassogenes.jpg"
jpeg(paste0(figs.dir, sys.sep, corhm.name), 7, 7, units="in", res=400)
corhm
dev.off()
corhm + scale_colour_gradientn(colours=rainbow(4))
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho") +
scale_colour_gradientn(colours=rainbow(4))
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho") +
scale_colour_gradient(colours=rainbow(4))
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile(colours=rainbow(4)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile(col=rainbow(4))
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile(col=rainbow(4)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho") +
scale_fill_manual(values=rainbow(4))
colors <- colorRampPalette(c("blue", "green", "yellow", "red"))(42)
colors <- colorRampPalette(c("blue", "green", "yellow", "red"))(42)
colnames(melted_cormat_filt) <- c("Gene Feature 1","Gene Feature 2","Rho")
corhm = ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile(col=rainbow(4)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho") +
scale_fill_manual(values=colors)
corhm
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho") +
scale_fill_manual(values=colors)
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_fill_manual(values=colors) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
colors
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_colour_gradient(values=colors) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
rainbow(4)
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_colour_gradient(values=rainbow(4)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_fill_gradientn(colours = terrain.colors(10)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_colour_gradient2() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_fill_gradientn(colours = colors) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
colors <- colorRampPalette(c("blue", "green", "yellow", "red"))(42)
colnames(melted_cormat_filt) <- c("Gene Feature 1","Gene Feature 2","Rho")
corhm = ggplot(data = melted_cormat_filt, aes(x=melted_cormat_filt$`Gene Feature 1`, y=melted_cormat_filt$`Gene Feature 2`, fill=melted_cormat_filt$Rho)) +
geom_tile() +
scale_fill_gradientn(colours = colors) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Spearman Correlation Results\nLasso Selected Features\n(First run and CoeffFilt run)") +
xlab("Gene Feature 1") +
ylab("Gene Feature 2") +
labs(fill="Rho")
corhm.name = "corplot_hm_lassogenes.jpg"
jpeg(paste0(figs.dir, sys.sep, corhm.name), 7, 7, units="in", res=400)
corhm + scale_colour_gradientn(colours=rainbow(4))
dev.off()
require(randomForest)
set.seed(20)
train.classes <- ndtr[,1]; train.set <- ndtr[,c(2:ncol(ndtr))]
train.all <- ndtr;
colnames(train.all) <- c("class",paste0("var",seq(2,ncol(train.all),1)))
train.all$class <- as.factor(train.all$class)
test.all <- ndte;
colnames(test.all) <- c("class",paste0("var",seq(2,ncol(test.all),1)))
test.all$class <- as.factor(test.all$class)
test.vars <- test.all[,c(2:ncol(test.all))]
# NTrees = 10
rf10 <- randomForest(class ~ .,
data=train.all,
ntree=10,
proximity=TRUE)
set.seed(20)
# select training data
rfdat.train <- as.data.frame(t(assay(deg.seset[,deg.seset$exptset.seahack=="train"])))
rfdat.train$class <- as.factor(deg.seset[,deg.seset$exptset.seahack=="train"]$deg.risk)
# form test set as with train set
rfdat.test <- as.data.frame(t(assay(deg.seset[,deg.seset$exptset.seahack=="test"])))
rf2k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 2000,
proximity = TRUE)
rf5k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 5000,
proximity = TRUE)
rf10k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 10000,
proximity = TRUE)
table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf2k)
pred.rf2k <- predict(rf2k, rfdat.test,'response')
pred.rf5k <- predict(rf5k, rfdat.test,'response')
pred.rf10k <- predict(rf10k, rfdat.test,'response')
table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf2k)
importance(rf2k)
i2kgenes = importance(rf2k)
class(i2kgenes)
rownames(i2kgenes)
i2kgenes = importance(rf2k)
i5kgenes = importance(rf5k)
i10kgenes = importance(rf10k)
identical(rownames(i2kgenes), rownames(standtable))
identical(rownames(i5kgenes), rownames(standtable))
identical(rownames(i10kgenes), rownames(standtable))
colnames(i2kgenes)
?importance
identical(importance(rf2k), importance(rf2k,type=1))
identical(importance(rf2k)[,1], importance(rf2k,type=1)[,1])
importance(rf2k,type=1)
head(importance(rf2k,type=1))
head(importance(rf2k,type=2))
standtable <- cbind(standtable, cbind(i2kgenes, cbind(i5kgenes, i10kgenes)))
head(standtable)
load("~/Documents/GitHub/ConsensusML/composite_code/rnotebook/data/standardtable_mloutputs_summary.rda")
i2kgenes = importance(rf2k)
i5kgenes = importance(rf5k)
i10kgenes = importance(rf10k)
colnames(i2kgenes) <- c("rf2ktrees_MeanDecNodeImp")
colnames(i5kgenes) <- c("rf5ktrees_MeanDecNodeImp")
colnames(i10kgenes) <- c("rf10ktrees_MeanDecNodeImp")
i2kgenes = i2kgenes[order(match(rownames(i2kgenes), rownames(standtable))),]
i5kgenes = i5kgenes[order(match(rownames(i5kgenes), rownames(standtable))),]
i10kgenes = i10kgenes[order(match(rownames(i10kgenes), rownames(standtable))),]
identical(rownames(i2kgenes), rownames(standtable))
identical(rownames(i5kgenes), rownames(standtable))
identical(rownames(i10kgenes), rownames(standtable))
standtable <- cbind(standtable, cbind(i2kgenes, cbind(i5kgenes, i10kgenes)))
load("~/Documents/GitHub/ConsensusML/composite_code/rnotebook/data/standardtable_mloutputs_summary.rda")
head(standtable)
i2kgenes = importance(rf2k)
i5kgenes = importance(rf5k)
i10kgenes = importance(rf10k)
colnames(i2kgenes) <- c("rf2ktrees_MeanDecNodeImp")
colnames(i5kgenes) <- c("rf5ktrees_MeanDecNodeImp")
colnames(i10kgenes) <- c("rf10ktrees_MeanDecNodeImp")
i2kgenes = i2kgenes[order(match(rownames(i2kgenes), rownames(standtable))),]
i5kgenes = i5kgenes[order(match(rownames(i5kgenes), rownames(standtable))),]
i10kgenes = i10kgenes[order(match(rownames(i10kgenes), rownames(standtable))),]
identical(rownames(i2kgenes), rownames(standtable))
identical(rownames(i5kgenes), rownames(standtable))
identical(rownames(i10kgenes), rownames(standtable))
dim(i2kgenes)
head(i2kgenes)
i2kgenes = importance(rf2k)
head(i2kgenes)
i2kgenes = importance(rf2k)
i5kgenes = importance(rf5k)
i10kgenes = importance(rf10k)
colnames(i2kgenes) <- c("rf2ktrees_MeanDecNodeImp")
colnames(i5kgenes) <- c("rf5ktrees_MeanDecNodeImp")
colnames(i10kgenes) <- c("rf10ktrees_MeanDecNodeImp")
head(i2kgenes)
i2kgenes = as.data.frame(importance(rf2k))
i5kgenes = as.data.frame(importance(rf5k))
i10kgenes = as.data.frame(importance(rf10k))
colnames(i2kgenes) <- c("rf2ktrees_MeanDecNodeImp")
colnames(i5kgenes) <- c("rf5ktrees_MeanDecNodeImp")
colnames(i10kgenes) <- c("rf10ktrees_MeanDecNodeImp")
i2kgenes = i2kgenes[order(match(rownames(i2kgenes), rownames(standtable))),]
i5kgenes = i5kgenes[order(match(rownames(i5kgenes), rownames(standtable))),]
i10kgenes = i10kgenes[order(match(rownames(i10kgenes), rownames(standtable))),]
identical(rownames(i2kgenes), rownames(standtable))
identical(rownames(i5kgenes), rownames(standtable))
identical(rownames(i10kgenes), rownames(standtable))
head(i2kgenes)
i2kgenes = as.data.frame(importance(rf2k))
i5kgenes = as.data.frame(importance(rf5k))
i10kgenes = as.data.frame(importance(rf10k))
colnames(i2kgenes) <- c("rf2ktrees_MeanDecNodeImp")
colnames(i5kgenes) <- c("rf5ktrees_MeanDecNodeImp")
colnames(i10kgenes) <- c("rf10ktrees_MeanDecNodeImp")
head(i2kgenes[order(match(rownames(i2kgenes), rownames(standtable))),])
head(rownames(standtable))
head(rownames(i2kgenes))
identical(rownames(i2kgenes), rownames(standtable))
identical(rownames(i5kgenes), rownames(standtable))
identical(rownames(i10kgenes), rownames(standtable))
standtable <- cbind(standtable, cbind(i2kgenes, cbind(i5kgenes, i10kgenes)))
head(standtable)
save(standtable, file = paste0(data.dir, sys.sep, stdtable.name))
plot(standtable$lasso_coeff, standtable$rf2ktrees_MeanDecNodeImp)
plot(standtable$lasso_coeff, standtable$rf5ktrees_MeanDecNodeImp)
plot(standtable$lasso_coeff, standtable$rf10ktrees_MeanDecNodeImp)
colnames(standtable)
boxplot(standtable[,c("rf2ktrees_MeanDecNodeImp",
"rf5ktrees_MeanDecNodeImp",
"rf10ktrees_MeanDecNodeImp")])
boxplot(standtable[,c("rf2ktrees_MeanDecNodeImp",
"rf5ktrees_MeanDecNodeImp",
"rf10ktrees_MeanDecNodeImp")],
las=2)
par(oma=c(10,3,3,3))
boxplot(standtable[,c("rf2ktrees_MeanDecNodeImp",
"rf5ktrees_MeanDecNodeImp",
"rf10ktrees_MeanDecNodeImp")],
las=2)
par(oma=c(7,3,3,3))
boxplot(standtable[,c("rf2ktrees_MeanDecNodeImp",
"rf5ktrees_MeanDecNodeImp",
"rf10ktrees_MeanDecNodeImp")],
las=2)
?boxplot
hist(standtable$rf2ktrees_MeanDecNodeImp)
quantile(standtable$rf2ktrees_MeanDecNodeImp,
seq(0,1,seq=0.5))[20]
quantile(standtable$rf2ktrees_MeanDecNodeImp,
seq(0,1,0.5))[20]
standtable$rf2ktrees_MeanDecNodeImp
quantile(standtable$rf2ktrees_MeanDecNodeImp)
quantile(standtable$rf2ktrees_MeanDecNodeImp, seq(0,1,0.1))
quantile(standtable$rf2ktrees_MeanDecNodeImp, seq(0,1,0.1))[10]
qrf2k = quantile(standtable$rf2ktrees_MeanDecNodeImp, seq(0,1,0.1))[10]
nrow(standtable[standtable$rf2ktrees_MeanDecNodeImp>=qrf2k,])
quantile(standtable$rf2ktrees_MeanDecNodeImp, seq(0,1,0.05))[20]
qrf2k_95quant = quantile(standtable$rf2ktrees_MeanDecNodeImp, seq(0,1,0.05))[20]
nrow(standtable[standtable$rf2ktrees_MeanDecNodeImp>=qrf2k_95quant,])
nrow(standtable[standtable$rf2ktrees_MeanDecNodeImp>=qrf2k_95quant &
!standtable$lasso_coeff==0,])
nrow(standtable[standtable$rf2ktrees_MeanDecNodeImp>=qrf2k_95quant &
(!standtable$lasso_coeff==0|
!standtable$lasso_rmCoeff==0),])
nrow(standtable[!standtable$lasso_rmCoeff==0,])
corhist.name <- "corplot_hist_all-vs-lassogenes.jpg"
jpeg(paste0(figs.dir, sys.sep, corhist.name), 8,6,units="in",res=400)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes\n(2 reps, with and\nwithout coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
dev.off()
cormat <- round(cor(t(assay(degfilt.se)), method="spearman"),3)
melted_cormat <- melt(cormat)
corhist =
# corr table, filtered genes
goi <- rownames(standtable[!standtable$lasso_coeff==0 | !standtable$lasso_rmCoeff==0,])
cormat_filt <- round(cor(t(assay(degfilt.se[goi,])), method="spearman"),3)
melted_cormat_filt <- melt(cormat_filt)
# hist plot
corhist.name <- "corplot_hist_all-vs-lassogenes.jpg"
jpeg(paste0(figs.dir, sys.sep, corhist.name), 8,6,units="in",res=400)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes\n(2 reps, with and\nwithout coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
dev.off()
corhist.name <- "corplot_hist_all-vs-lassogenes.jpg"
jpeg(paste0(figs.dir, sys.sep, corhist.name), 6,4,units="in",res=400)
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
lines(density(melted_cormat_filt$value), col=rgb(0.1,0.9,0.2),lwd=3, lty=1)
legend("topright",bty="n",legend=c("All Genes", "Lasso Genes\n(2 reps, with and\nwithout coeff. filt)"), col=c(rgb(0.2,0.2,0.8,alpha=0.2), rgb(0.1,0.9,0.2)), lwd=c(2,3),lty=c(2,1),cex=0.5)
dev.off()
lasso.coefffilt.name <- "lasso_coeffilt_resultlist.rda"
lasso.coefffilt.resultlist <- lassosubset.list
save(lasso.coefffilt.resultlist, paste0(data.dir, sys.sep, lasso.coefffilt.name))
lasso.cofilt.name <- "lasso_cofilt_resultlist.rda"
lasso.cofilt.resultlist <- lassosubset.list
save(lasso.cofilt.resultlist, paste0(data.dir, sys.sep, lasso.cofilt.name))
lasso.cofilt.resultlist <- lassosubset.list
save(lasso.cofilt.resultlist,file=paste0(data.dir, sys.sep, lasso.cofilt.name))
plot(density(melted_cormat$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
plot(density(melted_cormat_filt$value), col=rgb(0.2,0.2,0.8,alpha=0.2), lwd=2, lty=2,
xlim=c(-1.2,1.2), ylab="Relative Density", xlab="Rho", main="Gene Expr. Correlation Dist.")
rf.returnlist

c(names(xg.resultslist[[1]]$performance_testset[2:6]))
dfxgp <- matrix(xg.resultslist[[1]]$performance_testset[2:6], nrow=1)
for(i in 2:length(xg.resultslist)){
dfxgp <- rbind(dfxgp,matrix(xg.resultslist[[i]]$performance_testset[2:6], nrow=1))
}
colnames(dfxgp) <- c(names(xg.resultslist[[1]]$performance_testset[2:6]))
dfxgp
rownames(dfxgp) <- c(paste0("rep",seq(1,length(xg.resultslist))))
paste0("rep",seq(1,length(xg.resultslist)))
dfxgp
xg.resultslist = list("rep1"=xg1, "rep2"=xg2, "rep3"=xg3, "rep4"=xg4, "rep5"=xg5)
#===========================================
# append performance metrics on test data
#===========================================
postot <- ncol(degfilt.se[,degfilt.se$exptset.seahack=="test" & degfilt.se$deg.risk==1])
falsetot <- ncol(degfilt.se[,degfilt.se$exptset.seahack=="test" & degfilt.se$deg.risk==0])
for(i in 1:length(xg.resultslist)){
# test set predictions
predi <- predict(xg.resultslist[[i]], xgtest) # testset predictions
pbi <- ifelse(pred1>0.5, 1, 0) # binarized probabilities
cmi = table(pb1, xgtestlabel) # confusion matrix
# performance metrics
tp = cmi[2,2]
fp = cmi[2,1]
tn = cmi[1,1]
fn = cmi[1,2]
mean.err <- mean(as.numeric(pred1 > 0.5) != xgtestlabel) # mean.err
tpri = (cmi[2,2]/postot)
tnri = (cmi[1,1]/falsetot)
fdri = 1-(tp/(tp+fp))
forvali = 1-(tn/(tn+fn))
xg.resultslist[[i]]$performance_testset <- list("confusionMatrix"=cmi,
"mean_err"=mean.err,
"tpr"=tpri,
"tnr"=tnri,
"fdr"=fdri,
"for"=forvali)
}
# testset performances df
dfxgp <- matrix(xg.resultslist[[1]]$performance_testset[2:6], nrow=1)
for(i in 2:length(xg.resultslist)){
dfxgp <- rbind(dfxgp,matrix(xg.resultslist[[i]]$performance_testset[2:6], nrow=1))
}
colnames(dfxgp) <- c(names(xg.resultslist[[1]]$performance_testset[2:6]))
rownames(dfxgp) <- c(paste0("rep",seq(1,length(xg.resultslist))))
xg.resultslist[["testperfdf"]] <- dfxgp
xg.resultslist$testperfdf
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist$rep1, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist$rep2, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist$rep3, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist$rep3, main="Rep 4 Importance")
class(xg1)
xg1 <- xgboost(data = xgtrain, label = xgtrainlabel, max_depth = 2,
eta = 1, nthread = 2, nrounds = 2, objective = "binary:logistic")
xg1i <- xgb.importance(feature_names = colnames(xgtrain), model = xg1)
# rep2
xg2 <- xgboost(data = xgtrain, label = xgtrainlabel, max_depth = 50,
eta = 1, nthread = 2, nrounds = 2, objective = "binary:logistic")
xg2i <- xgb.importance(feature_names = colnames(xgtrain), model = xg2)
# rep3
xg3 <- xgboost(data = xgtrain, label = xgtrainlabel, max_depth = 50,
eta = 1, nthread = 2, nrounds = 50, objective = "binary:logistic")
xg3i <- xgb.importance(feature_names = colnames(xgtrain), model = xg3)
# rep4
xg4 <- xgboost(data = xgtrain, label = xgtrainlabel, max_depth = 100,
eta = 1, nthread = 2, nrounds = 50, objective = "binary:logistic")
xg4i <- xgb.importance(feature_names = colnames(xgtrain), model = xg4)
# rep5
xg5 <- xgboost(data = xgtrain, label = xgtrainlabel, max_depth = 100,
eta = 1, nthread = 2, nrounds = 100, objective = "binary:logistic")
xg5i <- xgb.importance(feature_names = colnames(xgtrain), model = xg5)
xg.resultslist = list("rep1"=xg1, "rep2"=xg2, "rep3"=xg3, "rep4"=xg4, "rep5"=xg5)
xgi.list <- list("imp1"=xg1i, "imp2"=xg2i, "imp3"=xg3i, "imp4"=xg4i, "imp5"=xg5i)
for(i in 1:length(xg.resultslist)){
xg.resultslist[[i]]$importance <- xgi.list[[i]]
}
postot <- ncol(degfilt.se[,degfilt.se$exptset.seahack=="test" & degfilt.se$deg.risk==1])
falsetot <- ncol(degfilt.se[,degfilt.se$exptset.seahack=="test" & degfilt.se$deg.risk==0])
for(i in 1:length(xg.resultslist)){
# test set predictions
predi <- predict(xg.resultslist[[i]], xgtest) # testset predictions
pbi <- ifelse(pred1>0.5, 1, 0) # binarized probabilities
cmi = table(pb1, xgtestlabel) # confusion matrix
# performance metrics
tp = cmi[2,2]
fp = cmi[2,1]
tn = cmi[1,1]
fn = cmi[1,2]
mean.err <- mean(as.numeric(pred1 > 0.5) != xgtestlabel) # mean.err
tpri = (cmi[2,2]/postot)
tnri = (cmi[1,1]/falsetot)
fdri = 1-(tp/(tp+fp))
forvali = 1-(tn/(tn+fn))
xg.resultslist[[i]]$performance_testset <- list("confusionMatrix"=cmi,
"mean_err"=mean.err,
"tpr"=tpri,
"tnr"=tnri,
"fdr"=fdri,
"for"=forvali)
}
# testset performances df
dfxgp <- matrix(xg.resultslist[[1]]$performance_testset[2:6], nrow=1)
for(i in 2:length(xg.resultslist)){
dfxgp <- rbind(dfxgp,matrix(xg.resultslist[[i]]$performance_testset[2:6], nrow=1))
}
colnames(dfxgp) <- c(names(xg.resultslist[[1]]$performance_testset[2:6]))
rownames(dfxgp) <- c(paste0("rep",seq(1,length(xg.resultslist))))
xg.resultslist[["testperfdf"]] <- dfxgp
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 10, 10)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 15, 15)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 25, 25)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 5, 5)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
par(mfrow=c(2,2))
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 5, 5)
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
dev.off()
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
par(mfrow=c(2,2))
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 10, 10, units="in", res=400)
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 10, 10, units="in", res=400)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 10, 10, units="in", res=400)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb1234_compimportance.jpg"), 12, 12, units="in", res=400)
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
par(mfrow=c(2,2))
xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
fig1 = xgb.plot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
fig2 = xgb.plot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
par(mfrow=c(2,2))
fig_1
fig1
draw(fig1)
plot(fig1)
?xgb.plot.importance
par(mfrow=c(2,2))
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
install.packages("Ckmeans.1d.dp")
par(mfrow=c(2,2))
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
fig1 = xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
fig2 = xgb.ggplot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
par(mfrow=c(2,2))
fig1
?xgb.plot.importance
jpeg(paste0(figs.dir, sys.sep, "xgb1_compimportance.jpg"), 12, 12, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb2_compimportance.jpg"), 12, 12, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb3_compimportance.jpg"), 12, 12, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb4_compimportance.jpg"), 12, 12, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb5_compimportance.jpg"), 12, 12, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[5]]$importance, main="Rep 5 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb6_compimportance.jpg"), 12, 12, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[6]]$importance, main="Rep 6 Importance")
dev.off()
plotwidth = 5
plotheight = 6
jpeg(paste0(figs.dir, sys.sep, "xgb1_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb2_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb3_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb4_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb5_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[5]]$importance, main="Rep 5 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb6_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[6]]$importance, main="Rep 6 Importance")
dev.off()
plotwidth = 7
plotheight = 6
jpeg(paste0(figs.dir, sys.sep, "xgb1_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[1]]$importance, main="Rep 1 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb2_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[2]]$importance, main="Rep 2 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb3_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[3]]$importance, main="Rep 3 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb4_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[4]]$importance, main="Rep 4 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb5_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[5]]$importance, main="Rep 5 Importance")
dev.off()
jpeg(paste0(figs.dir, sys.sep, "xgb6_compimportance.jpg"), plotwidth, plotheight, units="in", res=400)
xgb.ggplot.importance(importance_matrix = xg.resultslist[[6]]$importance, main="Rep 6 Importance")
dev.off()
names(xg.resultslist)
xg.resultslist$rep1$importance$Importance
colnames(xg.resultslist$rep1$importance)
i=1
https://cran.r-project.org/web/packages/automl/index.html
xgii <- xg.resultslist[[i]]$importance
xgiiv <- xgii$Importance
names(xgiiv) <- xgii$Feature
xgiiv
xgii$Importance
cnames <- c("xg1_imp", "xg2_imp", "xg3_imp", "xg4_imp", "xg5_imp")
for(i in 1:length(xg.resultslist)){
xgii <- xg.resultslist[[i]]$importance
xgiiv <- xgii$Importance
names(xgiiv) <- xgii$Feature
standtable$newvar <- 0
for(l in 1:length(xgiiv)){
standtable[gsub(";.*","",names(xgiiv)[l]),]$newvar <- xgiiv[l]
}
colnames(standtable)[length(colnames(standtable))] <- cnames[i]
}
head(standtable)
load(paste0(data.dir, sys.sep, stdtable.name))
head(standtable)
cnames <- c("xg1_imp", "xg2_imp", "xg3_imp", "xg4_imp", "xg5_imp")
for(i in 1:length(cnames)){
xgii <- xg.resultslist[[i]]$importance
xgiiv <- xgii$Importance
names(xgiiv) <- xgii$Feature
standtable$newvar <- 0
for(l in 1:length(xgiiv)){
standtable[gsub(";.*","",names(xgiiv)[l]),]$newvar <- xgiiv[l]
}
colnames(standtable)[length(colnames(standtable))] <- cnames[i]
}
head(standtable)
save(standtable, file = paste0(data.dir, sys.sep, stdtable.name))
install.packages("automl")
library(automl)
?automl
?automl_train
?automl_train_manual
svm.resultslist$svm1$weightsvect
i
i=1
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
wv
quantile(wv,seq(0,1,0.1))
quantile(wv,seq(0,1,0.1))[6]
quantile(wv,seq(0,1,0.1))[8]
quantile(wv,seq(0,1,0.1))[9]
quantile(abs(wv),seq(0,1,0.1))[9]
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.1))[9]  # apply weights filter
wvfilt <- wv[abs(wv)>=qwi]
barplot(wvfilt)
length(wvfilt)
qwi <- quantile(abs(wv),seq(0,1,0.05))
qwi
qwi[20]
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.05))[20]  # apply weights filter
wvfilt <- wv[abs(wv)>=qwi]
barplot(wvfilt)
qwfilt <- 0.99
quantile(abs(wv),seq(0,1,0.01))[50]
quantile(abs(wv),seq(0,1,0.01))[100]
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wvfilt <- wv[abs(wv)>=qwi]
barplot(wvfilt)
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wvfilt <-
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wvfilt, las=2)
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wvfilt <-
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wvfilt, las=2)
}
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wvfilt <-
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wvfilt, las=2, cex.names = 0.5)
}
qwfilt <- 0.99
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist$svm1$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),8,8,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]s
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
dev.off()
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),8,8,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
dev.off()
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),8,8,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
# append gene symbols to names
for(l in 1:length(wv)){
names(wv)[l] <- paste0(names(wv)[l],";\n",rowData(degfilt.se[names(wv)[l],])$hgnc_symbol)
}
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
# append gene symbols to names
for(l in 1:length(wv)){
names(wv)[l] <- paste0(names(wv)[l],";\n",rowData(degfilt.se[names(wv)[l],])$hgnc_symbol)
}
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),8,8,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
# append gene symbols to names
for(l in 1:length(wbp)){
names(wbp)[l] <- paste0(names(wbp)[l],";\n",rowData(degfilt.se[names(wbp)[l],])$hgnc_symbol)
}
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
dev.off()
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),14,10,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,2,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
# append gene symbols to names
for(l in 1:length(wbp)){
names(wbp)[l] <- paste0(names(wbp)[l],";\n",rowData(degfilt.se[names(wbp)[l],])$hgnc_symbol)
}
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
dev.off()
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),14,10,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,5,2),oma=c(2,2,1,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
# append gene symbols to names
for(l in 1:length(wbp)){
names(wbp)[l] <- paste0(names(wbp)[l],";\n",rowData(degfilt.se[names(wbp)[l],])$hgnc_symbol)
}
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
dev.off()
jpeg(paste0(figs.dir, sys.sep, "bpweights_svm4reps.jpg"),14,10,units="in",res=400)
par(mfrow=c(2,2),mar=c(5,3,5,2),oma=c(2,2,2,1))
for(i in 1:length(svm.resultslist)){
wi <- svm.resultslist[[i]]$weightsvect
wv <- wi[1,]
names(wv) <- colnames(wi)
qwi <- quantile(abs(wv),seq(0,1,0.01))[100]  # apply weights filter
wbp <- wv[abs(wv)>=qwi]
wbp <- wbp[order(wbp)]
# append gene symbols to names
for(l in 1:length(wbp)){
names(wbp)[l] <- paste0(names(wbp)[l],";\n",rowData(degfilt.se[names(wbp)[l],])$hgnc_symbol)
}
barplot(wbp,main=paste0("Rep ",i," Weights"), las=2, cex.names = 0.5)
}
dev.off()
head(standtable)
write.csv(standout, file=paste0(data.dir, sys.sep, "standouttable.csv"))
write.csv(standtable, file=paste0(data.dir, sys.sep, "standouttable.csv"))
save(xg.resultslist, file=paste0(data.dir, sys.sep, "xgb_resultslist.rda"))
save(svm.resultslist, file=paste0(data.dir, sys.sep, "svm4reps_resultslist.rda"))

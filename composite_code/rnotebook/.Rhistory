heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
}
compositeCorHM(seset=degfilt.se)
compositeCorHM <- function(seset, corhmname="lasso_hmcorcomp_alldat_rep123.jpg"){
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
cordat <- t(assay(degfilt.se))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
# colkey
hm_data = call.21
breaks=seq(min(hm_data),max(hm_data),0.05)
hmcol = colorRamp2(breaks,colorRampPalette(c("blue","purple","green","yellow","orange","red"))(n=length(breaks)))
# hm21 -- rep2 genes vs rep1 genes (y-axis)
hm_data = call.21
hm21 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 2 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
}
compositeCorHM(seset=degfilt.se)
compositeCorHM(seset=degfilt.se[,degfilt.se$exptset.seahack=="test"],
corhmname="lasso_hmcorcomp_alltest_rep123.jpg")
compositeCorHM(seset=degfilt.se[,degfilt.se$exptset.seahack=="train"],
corhmname="lasso_hmcorcomp_alltrain_rep123.jpg")
compositeCorHM(seset=degfilt.se[,degfilt.se$exptset.seahack=="test"],
corhmname="lasso_hmcorcomp_alltest_rep123.jpg")
compositeCorHM <- function(seset, corhmname="lasso_hmcorcomp_alldat_rep123.jpg"){
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
# colkey
hm_data = call.21
breaks=seq(min(hm_data),max(hm_data),0.05)
hmcol = colorRamp2(breaks,colorRampPalette(c("blue","purple","green","yellow","orange","red"))(n=length(breaks)))
# hm21 -- rep2 genes vs rep1 genes (y-axis)
hm_data = call.21
hm21 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 2 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
}
compositeCorHM(seset=degfilt.se)
compositeCorHM(seset=degfilt.se[,degfilt.se$exptset.seahack=="test"],
corhmname="lasso_hmcorcomp_alltest_rep123.jpg")
hm21
hm31
dim(degfilt.se[,degfilt.se$exptset.seahack=="test"])
seset=degfilt.se[,degfilt.se$exptset.seahack=="test"]
corhmname="lasso_hmcorcomp_alltest_rep123.jpg"
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
# colkey
hm_data = call.21
breaks=seq(min(hm_data),max(hm_data),0.05)
hmcol = colorRamp2(breaks,colorRampPalette(c("blue","purple","green","yellow","orange","red"))(n=length(breaks)))
# hm21 -- rep2 genes vs rep1 genes (y-axis)
hm_data = call.21
hm21 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 2 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
seset=degfilt.se[,degfilt.se$exptset.seahack=="train"]
corhmname="lasso_hmcorcomp_alltrain_rep123.jpg"
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
# colkey
hm_data = call.21
breaks=seq(min(hm_data),max(hm_data),0.05)
hmcol = colorRamp2(breaks,colorRampPalette(c("blue","purple","green","yellow","orange","red"))(n=length(breaks)))
# hm21 -- rep2 genes vs rep1 genes (y-axis)
hm_data = call.21
hm21 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 2 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
seset=degfilt.se[,degfilt.se$deg.risk==0]
corhmname="lasso_hmcorcomp_alldat0_rep123.jpg"
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
# colkey
hm_data = call.21
breaks=seq(min(hm_data),max(hm_data),0.05)
hmcol = colorRamp2(breaks,colorRampPalette(c("blue","purple","green","yellow","orange","red"))(n=length(breaks)))
# hm21 -- rep2 genes vs rep1 genes (y-axis)
hm_data = call.21
hm21 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 2 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
seset=degfilt.se[,degfilt.se$deg.risk==1]
corhmname="lasso_hmcorcomp_alldat1_rep123.jpg"
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
cordat <- t(assay(seset))
cordatsym <- cordat
colnames(cordatsym) <- paste0(rowData(seset)$ensembl_gene_id,"; ",
rowData(seset)$hgnc_symbol)
cormat.allsamp <- round(cor(cordat, method="spearman"),3)
cormatsym.allsamp <- round(cor(cordatsym, method="spearman"),3)
filt1 <- which(rownames(cormat.allsamp) %in% names(rep1$nonzero.coef))
filt2 <- which(colnames(cormat.allsamp) %in% names(rep2$nonzero.coef))
filt3 <- which(colnames(cormat.allsamp) %in% names(rep3$nonzero.coef))
call.21 <- cormatsym.allsamp[filt1,filt2]
call.31 <- cormatsym.allsamp[filt1,filt3]
# colkey
hm_data = call.21
breaks=seq(min(hm_data),max(hm_data),0.05)
hmcol = colorRamp2(breaks,colorRampPalette(c("blue","purple","green","yellow","orange","red"))(n=length(breaks)))
# hm21 -- rep2 genes vs rep1 genes (y-axis)
hm_data = call.21
hm21 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 2 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
# hm31 -- rep3 genes (x-axis) vs rep1 genes (y-axis)
hm_data = call.31
hm31 <- Heatmap(hm_data,col=hmcol,cluster_columns = TRUE,show_heatmap_legend = TRUE,
name="Rho", show_row_names = TRUE, show_column_names = TRUE,
column_title = "Rep 3 Gene Features", column_dend_reorder = TRUE,
row_dend_reorder = TRUE,
heatmap_legend_param = list(color_bar = "continuous"),
row_title = "Rep 1 Gene Features",
row_names_gp = gpar(fontsize = 8),
column_names_gp = gpar(fontsize = 8))
jpeg(paste0(figs.dir, sys.sep, corhmname),12,8,units="in",res=400)
hm21+hm31
dev.off()
standtable = as.data.frame(rowData(degfilt.se))
identical(rownames(degfilt.se),rownames(standtable))
head(standtable)
identical(rownames(degfilt.se),rownames(standtable))
identical(rownames(degfilt.se),rownames(standtable))
rep1cvar<- rep(0, nrow(degfilt.se))
rep1coef <- rep1$nonzero.coef
for(i in length(rep1coef)){
rep1cvar[names(rep1coef)[i]] <- as.numeric(rep1coef[i])
}
standtable$lasso_coef_rep1 <- rep1cvar
dim(degfilt.se)
rep1cvar<- rep(0, nrow(degfilt.se))
rep1coef <- rep1$nonzero.coef
for(i in length(rep1coef)){
rep1cvar[names(rep1coef)[i]] <- as.numeric(rep1coef[i])
}
length(rep1cvar)
rep1coef
i=1
identical(rownames(degfilt.se),rownames(standtable))
rep1cvar<- rep(0, nrow(degfilt.se))
names(rep1cvar) <- rownames(degfilt.se)
rep1coef <- rep1$nonzero.coef
for(i in length(rep1coef)){
rep1cvar[names(rep1coef)[i]] <- as.numeric(rep1coef[i])
}
rep1cvar
standtable$lasso_coef_rep1 <- rep1cvar
addLassoCoeff <- function(resultslist){
repcvar<- rep(0, nrow(degfilt.se))
names(repcvar) <- rownames(degfilt.se)
repcoeff <- resultslist$nonzero.coef
for(i in length(repcoeff)){
repcvar[names(repcoeff)[i]] <- as.numeric(repcoeff[i])
}
return(repcvar)
}
addLassoCoeff(rep1)
addLassoCoeff <- function(resultslist){
repcvar<- rep(0, nrow(degfilt.se))
names(repcvar) <- rownames(degfilt.se)
repcoeff <- resultslist$nonzero.coef
for(i in length(repcoeff)){
repcvar[names(repcoeff)[i]] <- as.numeric(repcoeff[i])
}
return(repcvar)
}
if(identical(rownames(degfilt.se),rownames(standtable))){
standtable$lasso_coef_rep1 <- addLassoCoeff(rep1)
standtable$lasso_coef_rep1 <- addLassoCoeff(rep2)
standtable$lasso_coef_rep1 <- addLassoCoeff(rep3)
}
save(standtable, file = paste0(data.dir, sys.sep, stdtable.name))
standtable$lasso_coef_rep1 <- addLassoCoeff(rep1)
standtable$lasso_coef_rep2 <- addLassoCoeff(rep2)
standtable$lasso_coef_rep3 <- addLassoCoeff(rep3)
length(intersect(rownames(standtable[!standtable$lasso_coef_rep1==0,]), rownames(standtable[!standtable$lasso_coef_rep2==0,])))
length(intersect(rownames(standtable[!standtable$lasso_coef_rep2==0,]), rownames(standtable[!standtable$lasso_coef_rep3==0,])))
require(randomForest)
set.seed(20)
install.packages("randomForest")
require(randomForest)
set.seed(20)
rfdat.train <- as.data.frame(t(assay(deg.seset[,deg.seset$exptset.seahack=="train"])))
# append binom classes
rfdat.train$class <- as.factor(deg.seset[,deg.seset$exptset.seahack=="train"]$deg.risk)
# form test set as with train set
rfdat.test <- as.data.frame(t(assay(deg.seset[,deg.seset$exptset.seahack=="test"])))
#rfdat.test$class <- as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk)
rf2k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 2000,
proximity = TRUE)
rf5k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 5000,
proximity = TRUE)
rf10k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 10000,
proximity = TRUE)
# assess model fit
pred.rf2k <- predict(rf2k, rfdat.test,'response')
pred.rf5k <- predict(rf5k, rfdat.test,'response')
pred.rf10k <- predict(rf10k, rfdat.test,'response')
deg.seset <- degfilt.se
# select training data
rfdat.train <- as.data.frame(t(assay(deg.seset[,deg.seset$exptset.seahack=="train"])))
# append binom classes
rfdat.train$class <- as.factor(deg.seset[,deg.seset$exptset.seahack=="train"]$deg.risk)
# form test set as with train set
rfdat.test <- as.data.frame(t(assay(deg.seset[,deg.seset$exptset.seahack=="test"])))
rf2k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 2000,
proximity = TRUE)
rf5k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 5000,
proximity = TRUE)
rf10k <- randomForest(class ~ .,
data = rfdat.train,
ntree = 10000,
proximity = TRUE)
pred.rf2k <- predict(rf2k, rfdat.test,'response')
pred.rf5k <- predict(rf5k, rfdat.test,'response')
pred.rf10k <- predict(rf10k, rfdat.test,'response')
table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf2k)
cm.2k <- table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf2k)
table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf5k)
cm.2k <- table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf2k)
cm.5k <- table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf5k)
cm.10k <- table(observed = as.factor(deg.seset[,deg.seset$exptset.seahack=="test"]$deg.risk),
predicted = pred.rf10k)
rf.returnlist <- list('rf2k.results'=list('fitmodel'=rf2k,'conf.matrix'=cm.2k),
'rf5k.results'=list('fitmodel'=rf5k,'conf.matrix'=cm.5k),
'rf10k.results'=list('fitmodel'=rf10k,'conf.matrix'=cm.10k))
save(rf.returnlist, file=paste0(data.dir, sys.sep, rf.resultlist.name))
rf.resultlist.name = "rf_noboost_2k5k10ktrees_allresultslist.rda"
rf.returnlist <- list('rf2k.results'=list('fitmodel'=rf2k,'conf.matrix'=cm.2k),
'rf5k.results'=list('fitmodel'=rf5k,'conf.matrix'=cm.5k),
'rf10k.results'=list('fitmodel'=rf10k,'conf.matrix'=cm.10k))
save(rf.returnlist, file=paste0(data.dir, sys.sep, rf.resultlist.name))
i2kgenes = as.data.frame(importance(rf2k))
i5kgenes = as.data.frame(importance(rf5k))
i10kgenes = as.data.frame(importance(rf10k))
colnames(i2kgenes) <- c("rfnb_2k_MeanDecNodeImp")
colnames(i5kgenes) <- c("rfnb_5k_MeanDecNodeImp")
colnames(i10kgenes) <- c("rfnb_10k_MeanDecNodeImp")
i2kgenes = i2kgenes[order(match(rownames(i2kgenes), rownames(standtable))),]
i5kgenes = i5kgenes[order(match(rownames(i5kgenes), rownames(standtable))),]
i10kgenes = i10kgenes[order(match(rownames(i10kgenes), rownames(standtable))),]
identical(rownames(i2kgenes), rownames(standtable))
i2kgenes
head(i2kgenes)
i2kgenes = as.data.frame(importance(rf2k))
head(i2kgenes)
colnames(i2kgenes) <- c("rfnb_2k_MeanDecNodeImp")
colnames(i5kgenes) <- c("rfnb_5k_MeanDecNodeImp")
colnames(i10kgenes) <- c("rfnb_10k_MeanDecNodeImp")
head(i2kgenes)
i2kgenes = i2kgenes[order(match(rownames(i2kgenes), rownames(standtable))),]
head(i2kgenes)
head(standtable)
i2k <- importance(rf2k)
i2k
i2k <- importance(rf2k)
i2kvar <- i2k[,1]
names(i2kvar) <- rownames(i2k)
i2kvar <- i2kvar[order(match(names(i2kvar),rownames(standtable)))]
identical(names(i2kvar),rownames(standtable))
getRFIvar <- function(rfmodel){
idf <- importance(rfmodel)
ivar <- idf[,1]
names(ivar) <- rownames(idf)
ivar <- ivar[order(match(names(ivar),rownames(standtable)))]
if(identical(names(ivar),rownames(standtable))){
return(ivar)
} else{
message("error")
}
}
getRFIvar(rfmodel=rf2k)
standtable$rfnb_2k_MeanDecNodeImp <- as.numeric(getRFIvar(rfmodel=rf2k))
standtable$rfnb_5k_MeanDecNodeImp <- as.numeric(getRFIvar(rfmodel=rf5k))
standtable$rfnb_10k_MeanDecNodeImp <- as.numeric(getRFIvar(rfmodel=rf10k))
head(standtable)
save(standtable, file = paste0(data.dir, sys.sep, stdtable.name))
